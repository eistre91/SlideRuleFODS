head(hflights)
flights <- tbl_df(hflights)
flights
data.frame(head(flights))
str(flights)
filter(flights, Month==1, DayofMonth==1)
flights[flights$Month==1 & flights$DayofMonth==1, ]
filter(flights, UniqueCarrier %in% c("AA", "UA"))
select(flights, DepTime, Arrtime, FlightNum)
select(flights, DepTime, ArrTime, FlightNum)
flights %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(Distance, Airtime) %>%
mutate(Speed = Distance/AirTime*60)
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
flights <- flights %>% mutate(Speed = Distance/AirTime * 60)
flights
select(flights, speed)
select(flights, Speed)
flights %>%
group_by(Dest) %>%
summarise(avg_delay = mean(ArrDelay, na.rm = TRUE))
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(mean), Cancelled, Diverted)
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=TRUE), max(.,na.rm=TRUE)), matches("Delay"))
flights %>%
group_by(Month, DayofMonth) %>%
summarise(flight_count = n()) %>%
arrange(desc(flight_count))
flights %>%
group_by(Dest) %>%
summarise(flight_count = n(), plane_count = n_distinct(TailNum))
flights %>%
group_by(Dest) %>%
select(Cancelled) $>$
flights %>%
group_by(Dest) %>%
select(Cancelled) %>%
table %>%
head()
flights %>%
group_by(Dest) %>%
select(Cancelled)
flights %>%
group_by(Dest)
flights %>%
group_by(Year)
flights %>%
group_by(Dest)
flights %>%
group_by(Dest) %>%
summarise(Cancelled)
flights %>%
group_by(Dest) %>%
summarise(cancelled_count = sum(Cancelled))
flights %>%
summarise(cancelled_count = sum(Cancelled))
flights %>%
group_by(Dest) %>%
summarise(cancelled_count = sum(Cancelled)) %>%
arrange(desc(cancelled_count))
?table
flights %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(DepDelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
flights %>%
group_by(Month) %>%
summarise(flight_count = n()) %>%
mutate(change = flight_count - lag(flight_count))
flights %>%
group_by(Month) %>%
tally() %>%
mutate(change = n - lag(n))
flights %>% sample_n(5)
str(flights)
glimpse(flights)
rm(flights)
install.packages(nycflights13)
install.packages("nycflights13")
suprressMessages(library(dplyr))
suppressMessages(library(dplyr))
library(nycflights13)
flights
library(ggplot2)
data(diamonds)
head(diamonds)
names(diamonds)
dim(diamonds)
?type
typeof(diamonds)
?apply
apply(diamonds, typeof)
apply(diamonds, FUN = typeof)
?factor
is.ordered(diamonds)
?by
is.ordered(names(diamonds))
names(diamonds)
?apply
lapply(diamonds, typeof)
lapply(diamonds, is.ordered)
head(diamonds)
?factor
levels(diamonds)
levels(diamonds$color)
as.numeric(diamonds$color)
as.numeric(levels(diamonds$color)
)
levels(diamonds$color)
?diamonds
?qplot
qplot(diamonds$price, diamonds)
?qplot
qplot(diamonds$price, data=diamonds)
summary(diamonds$price)
diamonds$price < 500
sum(diamonds < 500)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price > 15000)
sum(diamonds$price >= 15000)
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,5000))
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,2500))
scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
+     scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400))
?scale_x_continous
?scale_x_continuous
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 50))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 50) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 25) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 25) +
scale_x_continuous(limits = c(0,1500), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds) +
facet_wrap(~cut)
qplot(x = price, data = diamonds) +
facet_wrap(~cut) +
scale_x_continuous(limits = c(15000, 20000))
?max
subset(diamonds, diamonds$price == max(diamonds$price))
subset(diamonds, diamonds$price == min(diamonds$price))
?by
by(diamonds$price, diamonds$cut, median)
qplot(x = price, data = diamonds) +
facet_wrap(~cut) +
asdf
qplot(x = price, data = diamonds) +
facet_wrap(~cut)
?facet_wrap
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free_y")
qplot(x = price, data = diamonds) +
asdf
names(diamonds)
qplot(x = price/carat, data = diamonds)
qplot(x = price/carat, data = diamonds) +
facet(~cut)
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 25) +
facet_wrap(~cut, scales="free_y")
scale_x_log10()
qplot(x = price, data = diamonds, binwidth = 25) +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
qplot(x = price/carat, data = diamonds) +
facet
qplot(x = price/carat, data = diamonds) +
facet_wrap(cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut) +
scale_x_log10()
?qplot
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut) +
scale_x_log10()
?qplot
?geom
library(dplyr)
setwd("C:/DataWranglingPractice")
temp = list.files(pattern="*txt")
temp
for (i in 1:length(temp)) assign(temp[i], read.table(temp[i]))
?inner_join
head(subject_test.txt)
test_join <- inner_join(subject_test.txt, X_test.txt)
head(test_join)
student_test
subject_test.txt
filter(subject_test.txt, V1 == 24)
rename(subject_test.txt, V1 = "subject_ID")
rename(subject_test.txt, V1 = subject_ID
)
?rename
rename(subject_test.txt, V1 = subject_ID)
rename(subject_test.txt, subject_id = V!)
rename(subject_test.txt, subject_id = V1)
head(subject_test.txt)
subject_test.txt <- rename(subject_test.txt, subject_id = V1)
head(subject_test.txt)
union(subject_test.txt, subject_train.txt)
subject_train.txt <- rename(subject_train.txt, subject_id = V1)
union(subject_test.txt, subject_train.txt)
subject_combined.txt <- union(subject_test.txt, subject_train.txt)
subject_combined.txt
subject_combined.txt <- bind_rows(subject_train.txt, subject_test.txt)
head(subject_combined.txt)
subject_combined.txt
subject_test.txt
head(subject_test.txt)
dim(subject_test.txt)
dim(subject_test.txt)[1] + dim(subject_train.txt)
dim(subject_test.txt)[1] + dim(subject_train.txt)[1]
subject_test.txt
X_test
X_combined.txt <- bind_rows(X_train.txt, X_test.txt)
X_combined.txt <- bind_rows(X_train.txt, X_test.txt)
Y_combined.txt <- bind_rows(Y_train.txt, Y_train.txt)
X_combined.txt <- bind_rows(X_train.txt, X_test.txt)
Y_combined.txt <- bind_rows(Y_train.txt, Y_test.txt)
X_combined.txt <- bind_rows(X_train.txt, X_test.txt)
Y_combined.txt <- bind_rows(y_train.txt, y_test.txt)
View(body_acc_x_test.txt)
rm(test_join)
subject_combined <- bind_rows(subject_train.txt, subject_test.txt)
X_combined <- bind_rows(X_train.txt, X_test.txt)
Y_combined <- bind_rows(y_train.txt, y_test.txt)
body_acc_x_combined <- bind_rows(body_acc_x_train.txt, body_acc_x_test.txt)
body_acc_y_combined <- bind_rows(body_acc_y_train.txt, body_acc_y_test.txt)
body_acc_z_combined <- bind_rows(body_acc_z_train.txt, body_acc_z_test.txt)
body_gyro_x_combined <- bind_rows(body_gyro_x_train.txt, body_gyro_x_test.txt)
body_gyro_y_combined <- bind_rows(body_gyro_y_train.txt, body_gyro_y_test.txt)
body_gyro_z_combined <- bind_rows(body_gyro_z_train.txt, body_gyro_z_test.txt)
total_acc_x_combined <- (total_acc_x_train.txt, total_acc_x_test.txt)
total_acc_y_combined <- (total_acc_y_train.txt, total_acc_y_test.txt)
total_acc_z_combined <- (total_acc_z_train.txt, total_acc_z_test.txt)
total_acc_x_combined <- bind_rows(total_acc_x_train.txt, total_acc_x_test.txt)
total_acc_y_combined <- bind_rows(total_acc_y_train.txt, total_acc_y_test.txt)
total_acc_z_combined <- bind_rows(total_acc_z_train.txt, total_acc_z_test.txt)
head(X_combined)
nth?
ad
?Nth
?nth
?row_number
select(subject_combined, id)
select(subject_combined, subject_id)
select(subject_combined, 0)
select(subject_combined, 1)
row_number(subject_combined)
as.numeric(rownames(df))
as.numeric(rownames(subject_combined))
?inner_join
dim(X_combined)
dim(Y_combined)
test_join <- inner_join(x, y, by = rownames)
test_join <- inner_join(X_combined, y_combined, by = rownames)
rownames(X_combined)
subject_combined
?add_rownames
add_rownames(subject_combined, var = "rowname")
add_rownames(X_combined, var = "rowname")
add_rownames(Y_combined, var = "rowname")
add_rownames(body_acc_x_combined, var = "rowname")
add_rownames(body_acc_y_combined, var = "rowname")
add_rownames(body_acc_z_combined, var = "rowname")
add_rownames(body_gyro_x_combined, var = "rowname")
add_rownames(body_gyro_y_combined, var = "rowname")
add_rownames(body_gyro_z_combined, var = "rowname")
add_rownames(total_acc_x_combined, var = "rowname")
add_rownames(total_acc_y_combined, var = "rowname")
add_rownames(total_acc_z_combined, var = "rowname")
X_combined
head(X_combined)
head(subject_combined)
subject_combined <- add_rownames(subject_combined, var = "rowname")
X_combined <- add_rownames(X_combined, var = "rowname")
Y_combined <- add_rownames(Y_combined, var = "rowname")
body_acc_x_combined <- add_rownames(body_acc_x_combined, var = "rowname")
body_acc_y_combined <- add_rownames(body_acc_y_combined, var = "rowname")
body_acc_z_combined <- add_rownames(body_acc_z_combined, var = "rowname")
body_gyro_x_combined <- add_rownames(body_gyro_x_combined, var = "rowname")
body_gyro_y_combined <- add_rownames(body_gyro_y_combined, var = "rowname")
body_gyro_z_combined <- add_rownames(body_gyro_z_combined, var = "rowname")
total_acc_x_combined <- add_rownames(total_acc_x_combined, var = "rowname")
total_acc_y_combined <- add_rownames(total_acc_y_combined, var = "rowname")
total_acc_z_combined <- add_rownames(total_acc_z_combined, var = "rowname")
head(subject_combined)
?inner_join
inner_join(subject_combined, X_combined, by = "rowname")
head(Y_combined)
features.txt
X_combined
y_combined
Y_combined
View(X_combined.txt)
rm(X_combined.txt)
rm(Y_combined.txt)
features.txt
select(features.txt, contains("activity"))
select(features.txt, contains("name"))
select(features.txt, contains("label"))
X_combined
y_combined
y_combined
Y_combined
filter(Y_combined, V1 = 5)
filter(Y_combined, V1 == 5)
filter(Y_combined, V1 == 1)
activity_labels.txt
inner_join(Y_combined, activity_labels.txt, by = V1)
inner_join(Y_combined, activity_labels.txt, by = "V1)
sa
as
fa
gsa
g)""
""
inner_join(Y_combined, activity_labels.txt, by = "V1")
activity_labels.txt
Y_combined <- inner_join(Y_combined, activity_labels.txt, by = "V1")
Y_combined
?rename
rename(Y_combined, activitylabel = V1)
Y_combined <- rename(Y_combined, activitylabel = V1)
Y_combined <- rename(Y_combined, activityname = V2)
Y_combined
X_combined
?lapply
rename(X_combined, c("test1", "test2"))
"V" + seq(1, 561, 1)
seq(1, 561, 1)
?concat
??combine
?paste
rename(X_combined, c(test1, test2) = c(V1, V2))
?setNames
names(X_combined)[V1:V561]
names(X_combined)["V1":"V561"]
names(X_combined)
select(X_combined, V1:V561)
names(select(X_combined, V1:V561))
names(X_combined)[2:562]
test_rename <- X_combined
features.txt
?values
?value
?as.list
as.list(select(features.txt, V2))
names(test_rename)[2:562] <- as.list(select(features.txt, V2))
test_rename
head(test_rename)
as.list(select(features.txt, V2))
names(test_rename)
as.list(select(features.txt, V2))
as.list(select(features.txt, V2))[1]
list <- as.list(select(features.txt, V2))
list[1]
list[2]
list[3]
?collect
features.txt
features.txt[[V2]]
features.txt[[2]]
features.txt[[2]][1]
test_rename <- X_combined
head(X_combined)
test_rename
names(test_rename)[2:562] <- features.txt[[2]]
test_rename
features.txt[[2]]
as.character(features.txt[[2]][1])
features.txt
test_rename
names(test_rename)[2:562] <- as.character(features.txt[[2]])
test_rename
features.txt
names(X_combined)[2:562] <- as.character(features.txt[[2]])
head(X_combined)
X_combined
Y_combined
subject_combined
x_combined
X_combined
Y_combined
subject_combined
Y_combined
Y_combined
inner_join(Y_combined, activity_labels.txt, by = "V1")
inner_join(subject_combined, X_combined, by = "rowname")
full_table <- subject_combined
full
full_table <- subject_combined
full_table <- inner_join(full_table, Y_combined, by = "rowname")
full_table <- inner_join(full_table, X_combined, by = "rowname")
full
full_table
?group_by
full_table %>%
group_by(ActivityLabel)
full_table %>%
group_by(activitylabel)
full_table %>%
group_by(activitylabel)
full_table %>%
group_by(activitylabel) %>%
summarise(avg = mean(tBodyAcc-mean()-x))
select(full_table, contains("mean"))
full_table
?make.names()
select(full_table, contains("mean"))
select(full_table, contains("fBodyAcc"))
names(full_table)
makes.names(names(full_table))
make.names(names(full_table))
names(full_table) <- make.name(names(full_table))
names(full_table) <- make.names(names(full_table))
select(full_table, contains("mean"))
names(full_table) <- make.names(names(full_table), unique=TRUE)
names(full_table)
select(full_table, contains("mean"))
select(full_table, contains("std"))
select(full_table, contains("mean"), contains("std"))
mean_std_table <- select(full_table, contains("mean"), contains("std"))
mean_std_table
select(full_table, contains("mean"))
?summarise_each
?funs
names(full_table)
select(full_table, tBodyAcc.mean...X:)
select(full_table, tBodyAcc.mean...X:angle.z.gravityMean)
select(full_table, tBodyAcc.mean...X:angle.z.gravityMean.)
select(full_table, tBodyAcc.mean...X:angle.z.gravityMean.)
select(full_table, angle.z.gravityMean.)
select(full_table, angle.Z.gravityMean.)
select(full_table, tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
summarise_each_(funs(mean), tBodyAcc.mean...X:angle.Z.gravityMean.)
select(full_table, tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
summarise_each_(funs(mean), tBodyAcc.mean...X:angle.Z.gravityMean.)
select(full_table, tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
adf
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
select(tBodyAcc.mean...X)
full_table %>%
ASD
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
summarise_each_(funs(mean), tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
select(tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
summarise_each_(funs(mean), vars = tBodyAcc.mean...X:angle.Z.gravityMean.)
?summarise_each_
full_table %>%
group_by(activitylabel) %>%
group_by(subject_id) %>%
summarise_each(funs(mean), vars = tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(activitylabel) %>%
summarise_each(funs(mean), vars = tBodyAcc.mean...X:angle.Z.gravityMean.)
?group_by
full_table %>%
group_by(activitylabel, subject_id) %>%
summarise_each(funs(mean), vars = tBodyAcc.mean...X:angle.Z.gravityMean.)
full_table %>%
group_by(subject_id, activitylabel) %>%
summarise_each(funs(mean), vars = tBodyAcc.mean...X:angle.Z.gravityMean.)
