pkgs <- c('reshape2', 'plyr', 'ggplot2', 'dplyr', 'data.table', 'Lahman')
install.packages(pkgs)
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
head(pew)
head(pew)
dim(pew)
pew
tb <- read.csv(
file = "http://stat405.had.co.nz/data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
tb
head(tv)
head(tb)
weather <- read.delim(
file = "http://stat405.had.co.nz/data/weather.txt",
stringsAsFactors = FALSE
)
head(weather)
library(reshape2)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "frequency"
)
head(pew_tidy)
head(pew)
tail(pew_tidy)
head(tb)
tb$new_sp = NULL
names(tb) <- gsub("new_sp_", "", names(tb))
head(tb)
?melt
tb_tidy <- melt(
data = tb,
id = c("iso2", "year"),
variable.name = "gender_age",
value.name = "cases",
na.rm = TRUE
)
head(tb_tidy)
library(plyr)
tb_tidy <- mutate(tb_tidy,
gender = sub("^([m|f])(.*)$", "\\1", gender_age),
age = sub("^([m|f])(.*)$", "\\2", gender_age),
gender_age = NULL
)
head(tb_tidy)
tb_tidy <- tb_tidy[c('iso2', 'year', 'gender', 'age', 'cases')]
head(tb_tidy)
?mutate
head(weather)
?melt
weather_tidy <- melt()
weather_tidy <- melt(
data = weather,
)
head(weather_tidy)
weather_tidy <- melt(
data = weather,
id = c("id", "year", "month"),
variable.name = "element",
value.name = "d"
)
head(weather_tidy)
head(weather)
weather_tidy <- melt(
data = weather,
id = c("id", "year", "month", "element"),
variable.name = "d",
value.name = "frequency"
)
head(weather_tidy)
weather_tidy <- melt(
data = weather,
id = c("id", "year", "month", "element"),
variable.name = "d",
value.name = "frequency"
)
weather_tidy <- melt(
data = weather,
id = c("id", "year", "month", "element"),
variable.name = "d",
value.name = "frequency",
na.rm = TRUE
)
head(weather_tidy)
weather_tidy <- melt(
data = weather,
id = 1:4,
variable.name = "day",
value.name = "temparature",
na.rm = TRUE
)
head(weather_tidy)
weather_tidy <- mutate(weather_tidy,
day = sub("^d", "", day)
)
head(weather_tidy)
?dcast
weather_tidy2 <- dcast(
data = weather_tidy,
formula = id + year + month + day ~ element,
value.var = "temparature"
)
head(weather_tidy2)
billboards <- read.csv(
file = "http://stat405.had.co.nz/data/billboard.csv",
stringsAsFactors = FALSE
)
head(billboards)
names(billboards) <- gsub("\\.", "_", names(billboards))
head(billboards)
billboards <- mutate(billboards,
artist_inverted = iconv(artist_inverted, "MAC", "UTF-8"),
)
head(billboards)
billboards_tidy <- melt(billboards,
id = 1:7,
variable.name = "week",
value.name = "rank",
na.rm = TRUE
)
head(billboards_tidy)
billboards_tidy <- mutate(billboards_tidy,
week = as.numeric(gsub("^x([[:digit:]]+).*", "\\1", week))
)
head(billboards_tidy)
library(dplyr)
library(hflights)
install.packages("hflights")
library(hflights)
?data
data(hflights)
head(hflights)
flights <- tbl_df(hflights)
flights
data.frame(head(flights))
str(flights)
filter(flights, Month==1, DayofMonth==1)
flights[flights$Month==1 & flights$DayofMonth==1, ]
filter(flights, UniqueCarrier %in% c("AA", "UA"))
select(flights, DepTime, Arrtime, FlightNum)
select(flights, DepTime, ArrTime, FlightNum)
flights %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(Distance, Airtime) %>%
mutate(Speed = Distance/AirTime*60)
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
flights <- flights %>% mutate(Speed = Distance/AirTime * 60)
flights
select(flights, speed)
select(flights, Speed)
flights %>%
group_by(Dest) %>%
summarise(avg_delay = mean(ArrDelay, na.rm = TRUE))
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(mean), Cancelled, Diverted)
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=TRUE), max(.,na.rm=TRUE)), matches("Delay"))
flights %>%
group_by(Month, DayofMonth) %>%
summarise(flight_count = n()) %>%
arrange(desc(flight_count))
flights %>%
group_by(Dest) %>%
summarise(flight_count = n(), plane_count = n_distinct(TailNum))
flights %>%
group_by(Dest) %>%
select(Cancelled) $>$
flights %>%
group_by(Dest) %>%
select(Cancelled) %>%
table %>%
head()
flights %>%
group_by(Dest) %>%
select(Cancelled)
flights %>%
group_by(Dest)
flights %>%
group_by(Year)
flights %>%
group_by(Dest)
flights %>%
group_by(Dest) %>%
summarise(Cancelled)
flights %>%
group_by(Dest) %>%
summarise(cancelled_count = sum(Cancelled))
flights %>%
summarise(cancelled_count = sum(Cancelled))
flights %>%
group_by(Dest) %>%
summarise(cancelled_count = sum(Cancelled)) %>%
arrange(desc(cancelled_count))
?table
flights %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(DepDelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
flights %>%
group_by(Month) %>%
summarise(flight_count = n()) %>%
mutate(change = flight_count - lag(flight_count))
flights %>%
group_by(Month) %>%
tally() %>%
mutate(change = n - lag(n))
flights %>% sample_n(5)
str(flights)
glimpse(flights)
rm(flights)
install.packages(nycflights13)
install.packages("nycflights13")
suprressMessages(library(dplyr))
suppressMessages(library(dplyr))
library(nycflights13)
flights
library(ggplot2)
data(diamonds)
head(diamonds)
names(diamonds)
dim(diamonds)
?type
typeof(diamonds)
?apply
apply(diamonds, typeof)
apply(diamonds, FUN = typeof)
?factor
is.ordered(diamonds)
?by
is.ordered(names(diamonds))
names(diamonds)
?apply
lapply(diamonds, typeof)
lapply(diamonds, is.ordered)
head(diamonds)
?factor
levels(diamonds)
levels(diamonds$color)
as.numeric(diamonds$color)
as.numeric(levels(diamonds$color)
)
levels(diamonds$color)
?diamonds
?qplot
qplot(diamonds$price, diamonds)
?qplot
qplot(diamonds$price, data=diamonds)
summary(diamonds$price)
diamonds$price < 500
sum(diamonds < 500)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price > 15000)
sum(diamonds$price >= 15000)
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,5000))
scale_x_continuous(limits = c(0,2500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,2500))
scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
+     scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1500))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400))
?scale_x_continous
?scale_x_continuous
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 50))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 50) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 25) +
scale_x_continuous(limits = c(0,1400), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds, binwidth = 25) +
scale_x_continuous(limits = c(0,1500), breaks = seq(0, 1400, 100))
qplot(x = price, data = diamonds) +
facet_wrap(~cut)
qplot(x = price, data = diamonds) +
facet_wrap(~cut) +
scale_x_continuous(limits = c(15000, 20000))
?max
subset(diamonds, diamonds$price == max(diamonds$price))
subset(diamonds, diamonds$price == min(diamonds$price))
?by
by(diamonds$price, diamonds$cut, median)
qplot(x = price, data = diamonds) +
facet_wrap(~cut) +
asdf
qplot(x = price, data = diamonds) +
facet_wrap(~cut)
?facet_wrap
qplot(x = price, data = diamonds) +
facet_wrap(~cut, scales="free_y")
qplot(x = price, data = diamonds) +
asdf
names(diamonds)
qplot(x = price/carat, data = diamonds)
qplot(x = price/carat, data = diamonds) +
facet(~cut)
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut)
qplot(x = price, data = diamonds, binwidth = 25) +
facet_wrap(~cut, scales="free_y")
scale_x_log10()
qplot(x = price, data = diamonds, binwidth = 25) +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
qplot(x = price/carat, data = diamonds) +
facet
qplot(x = price/carat, data = diamonds) +
facet_wrap(cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut) +
scale_x_log10()
?qplot
qplot(x = price/carat, data = diamonds) +
facet_wrap(~cut) +
scale_x_log10()
?qplot
?geom
?qplot
?qplot
library(ggplot2)
?qplot
data(diamonds)
head(diamonds)
qplot(x = price/carat, data = diamonds, geom = "boxplot") +
+ facet_wrap(~color)
qplot(x = price/carat, data = diamonds, geom = "boxplot") +
+ facet_wrap(~color)
qplot(x = price/carat, data = diamonds, geom = "boxplot") +
facet_wrap(~color)
?qplot
qplot(x = price/carat, y = color data = diamonds, geom = "boxplot")
qplot(x = price/carat, y = color, data = diamonds, geom = "boxplot")
qplot(x = color, y = price/carat, data = diamonds, geom = "boxplot")
qplot(x = cut, y = price/carat, data = diamonds, geom="boxplot")
summarise(diamonds)
summarize(diamonds)
summary(diamonds)
?by
by(diamonds$price, diamonds$color, summary)
4214-911
7695-1860
qplot(x = carat, y = ..count../sum(..count..), data = diamonds, geom = 'freqpoly')
qplot(x = carat, y = ..count../sum(..count..), data = diamonds, geom = 'freqpoly', binwidth = .1)
qplot(x = carat, y = ..count.., data = diamonds, geom = 'freqpoly', binwidth = .1)
qplot(x = carat, y = ..count.., data = diamonds, geom = 'freqpoly', binwidth = .01)
qplot(x = carat, y = ..count.., data = diamonds, geom = 'freqpoly', binwidth = .01) +
scale_x_continuous(breaks=.1)
scale_x_continuous(breaks=seq(0, 10, .1))
qplot(x = carat, y = ..count.., data = diamonds, geom = 'freqpoly', binwidth = .01) +
scale_x_continuous(breaks=seq(0, 10, .1))
library(gdata)
install.packages(gdata)
install.packages("gdata")
pf <- read.csv(file = "pseudo_facebook.tsv", sep = "\t")
setwd("C:/SlideRuleFODS/Udacity EDA/")
library(ggplot2)
pf <- read.csv(file = "pseudo_facebook.tsv", sep = "\t")
library(reshape2)
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
yo <- read.csv('yogurt.csv')
str(yo)
?str
yo$id <- factor(yo$id)
str(yo)
qplot(x = yo, data = yo)
qplot(x = id, data = yo)
qplot(x = price, data = yo)
qplot(x = price, data = yo, binwidth = 1)
table(yo$price)
?transform
str(yo)
transform(yo, all.purchases = straberry + blueberry)
transform(yo, all.purchases = strawberry + blueberry)
head(transform(yo, all.purchases = strawberry + blueberry))
str(yo)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
qplot(x = all.purchases, data = yo)
qplot(x = all.purchases, data = yo, binwidth = 1)
ggplot(aes(x = time, y = price), data = yo) +
geom_point(alpha = 1/20, position = position_jitter(h = 0))
geom_point(alpha = 1/20)
ggplot(aes(x = time, y = price), data = yo) +
geom_point(alpha = 1/20)
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 4)
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
install.packages(GGally)
install.packages("GGally")
